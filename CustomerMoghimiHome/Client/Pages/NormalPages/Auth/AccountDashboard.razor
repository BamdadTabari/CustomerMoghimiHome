@page "/personal/account"
<PageTitle>Profile</PageTitle>

@inject ISnackbar Snackbar
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations


<MudTabs Elevation="1" Rounded="true" Color="Color.Info" PanelClass="mt-6">
    <MudTabPanel Text="Profile General" Icon="Icons.Material.Filled.Person">
        <MudGrid>
            <MudItem xs="12" sm="4" md="3">
                <MudCard Class="bg-color-melo">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText>Public Profile</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <div class="d-flex justify-center mb-4">
                            <MudAvatar Image="@AvatarImageLink" Style="height:100px; width:100px;">
                                @if (AvatarImageLink == null)
                                {
                                    <MudIcon Icon="@AvatarIcon" Size="Size.Large"></MudIcon>
                                }
                            </MudAvatar>

                        </div>
                        <MudText Align="Align.Center">@FirstName @LastName</MudText>
                        <MudText Align="Align.Center">@JobTitle</MudText>
                    </MudCardContent>
                    <MudCardActions Class="d-flex justify-center">
                        <MudButton OnClick="DeletePicture" Color="@AvatarButtonColor">@AvatarButtonText</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem xs="12" sm="8" md="9">
                <MudCard Class="bg-color-melo">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText>Profile Details</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="FirstName" Label="نام" Variant="Variant.Filled" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="LastName" Label="نام خوانوادگی" Variant="Variant.Filled" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="Email" Label="ایمیل" Variant="Variant.Filled" HelperText="Dont worry, we shall not spam!" InputType="InputType.Email" />
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                    <MudCardActions Class="pb-4 pl-4">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" @onclick="@(() => SaveChanges("عملیات با موفقیت انجام شد", Severity.Success))">ذخیره جزییات</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </MudTabPanel>
    <MudTabPanel Text="Detail" >
        <MudGrid>
            <MudItem>
                <MudCard Class="bg-color-melo">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText>Profile Details</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="Address" Label="Address" Variant="Variant.Filled" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="PostalCode" Label="Postal Code" Variant="Variant.Filled" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="PhoneNumber" Label="Phone Number" Variant="Variant.Filled" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudSelect T="string" @bind-Value="SexSelected" Label="Please Choose The Category">
                                    @{
                                        foreach (var pcd in Sex)
                                        {
                                            <MudSelectItem T="string" Value="pcd">@pcd</MudSelectItem>
                                        }
                                    }
                                </MudSelect>
                            </MudItem>
                           
                        </MudGrid>
                    </MudCardContent>
                    <MudCardActions Class="pb-4 pl-4">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" @onclick="@(() => SaveChanges("Profile details saved", Severity.Success))">Save Changes</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </MudTabPanel>
</MudTabs>
@code {
    public string AvatarImageLink { get; set; } = "MohammadJavadTabari1024.jpeg";
    public string AvatarIcon { get; set; }
    public string AvatarButtonText { get; set; } = "Delete Picture";
    public Color AvatarButtonColor { get; set; } = Color.Error;
    public string FirstName { get; set; } = "Bamdad";
    public string LastName { get; set; } = "Tabari";
    public string JobTitle { get; set; } = "IT Consultant";
    public string Email { get; set; } = "bamdadtabari@outlook.com";
    public bool FriendSwitch { get; set; } = true;
    public string Address { get; set; } = "Usa, Scandinavi, Portorico,";
    public long PostalCode { get; set; } = 89625574;
    public long PhoneNumber { get; set; } = 09301724389;
    public static List<string> Sex { get; set; } = new() { "Male", "Female", "Prefer Not To Say" };
    public string SexSelected = Sex[0];
    void DeletePicture()
    {
        if (!String.IsNullOrEmpty(AvatarImageLink))
        {
            AvatarImageLink = null;
            AvatarIcon = Icons.Material.Outlined.SentimentVeryDissatisfied;
            AvatarButtonText = "Upload Picture";
            AvatarButtonColor = Color.Primary;
        }
        else
        {
            return;
        }
    }

    void SaveChanges(string message, Severity severity)
    {
        Snackbar.Add(message, severity, config =>
        {
            config.ShowCloseIcon = false;
        });
    }

    MudForm form;
    MudTextField<string> pwField1;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return null;
    }
} 