@inherits LayoutComponentBase
@using System.Security.Claims
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudRTLProvider RightToLeft="true" />

<MudLayout>
    <MudAppBar Elevation="0" Style="background-image: linear-gradient(270deg, #3a0647 50%, rgb(5, 39, 103) 60%)">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Login" Href="login" Color="Color.Inherit" Target="_blank" />
        <MudIconButton Icon="@Icons.Material.Filled.PersonAddAlt1" Href="registration" Color="Color.Inherit" Target="_blank" />
        <MudIconButton Icon="@Icons.Material.Filled.Person" Href="personal/account" Color="Color.Inherit" Target="_blank" />
        <MudSpacer />
        <MudIconButton Icon=@_themeChangerSelectedIcon OnClick="OnThemeChange" Color="Color.Inherit" />
        <MudIconButton Icon="@Icons.Material.Filled.FormatTextdirectionLToR" OnClick="OnThemeChange" Color="Color.Inherit" />
    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" Elevation="1" Style="background-image: linear-gradient(180deg, rgb(5, 39, 103) 0%, #3a0647 70%)">
        <MudDrawerHeader>
            <MudText Typo="Typo.h5" Color="Color.Error">
                <b>Moghimi Home</b>
            </MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    private MudTheme _theme = new();
    private bool _isDarkMode;
    private string _themeChangerSelectedIcon = Icons.Material.Filled.Brightness3;
    void OnThemeChange()
    {
        _isDarkMode = !_isDarkMode;
        _themeChangerSelectedIcon = _isDarkMode ? Icons.Material.Filled.WbSunny : Icons.Material.Filled.Brightness3;
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}